package com.l2ashdz.layeredimager.analizador.sintactico;

import com.l2ashdz.layeredimager.edd.sparsematrix.SparseMatrix;
import com.l2ashdz.layeredimager.edd.tree.ArbolAVL;
import com.l2ashdz.layeredimager.model.Capa;
import java_cup.runtime.Symbol;

parser code {:

    SparseMatrix matriz = new SparseMatrix();
    ArbolAVL capas = new ArbolAVL();

    public ArbolAVL getCapas() {
        return this.capas;
    }

    public void syntax_error(Symbol s) {
        String ss =  (String) s.value;
        StringBuilder descripcion = new StringBuilder("Se esperaba: ");
        expected_token_ids().forEach(x -> descripcion.append(symbl_name_from_id(x)).append(", "));
        System.out.println(ss + " - " + descripcion);
    }

:}

terminal            OPEN_BRACE, CLOSE_BRACE, COMMA, SEMI;
terminal String     COLOR, ENTERO;

non terminal        capas, capa, nodos, infoNodo;

capas ::= capa CLOSE_BRACE capas
        | capa CLOSE_BRACE
        ;

capa ::= ENTERO:id OPEN_BRACE nodos
        {:
            capas.add(new Capa(matriz, Integer.parseInt(id)));
            matriz = new SparseMatrix();
        :}
        ;

nodos ::= infoNodo SEMI nodos
        | infoNodo SEMI
        ;

infoNodo ::= ENTERO:x COMMA ENTERO:y COMMA COLOR:c
           {:
                String color = c.replace("#", "");
                matriz.add(Integer.parseInt(color, 16), Integer.parseInt(x), Integer.parseInt(y));
           :}
           ;