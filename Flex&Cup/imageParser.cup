package com.l2ashdz.layeredimager.analizador.sintactico;

import com.l2ashdz.layeredimager.model.PreImagen;
import java.util.ArrayList;
import java.util.List;
import java_cup.runtime.Symbol;

parser code {:

    List<PreImagen> preImagenes = new ArrayList();
    List<Integer> capasImage = new ArrayList();

    public List<PreImagen> getPreImagenes() {
        return this.preImagenes;
    }

    public void syntax_error(Symbol s) {
        String ss =  (String) s.value;
        StringBuilder descripcion = new StringBuilder("Se esperaba: ");
        expected_token_ids().forEach(x -> descripcion.append(symbl_name_from_id(x)).append(", "));
        System.out.println(ss + " - " + descripcion);
    }

:}

terminal            OPEN_BRACE, CLOSE_BRACE, COMMA;
terminal String     ENTERO;

non terminal        images, image, idCapas;

images ::= image CLOSE_BRACE images
         | image CLOSE_BRACE
         ;

image ::= ENTERO:id OPEN_BRACE idCapas          {:preImagenes.add(new PreImagen(Integer.parseInt(id), capasImage));capasImage = new ArrayList();:}
        ;

idCapas ::= ENTERO:c COMMA idCapas          {:capasImage.add(Integer.parseInt(c));:}
          | ENTERO:c                        {:capasImage.add(Integer.parseInt(c));:}
          |
          ;